// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.7
// source: proto/middleware/middleware.proto

package middleware

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MiddlewareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MiddleName      string           `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	MiddleNamespace string           `protobuf:"bytes,3,opt,name=middle_namespace,json=middleNamespace,proto3" json:"middle_namespace,omitempty"`
	MiddleTypeId    int64            `protobuf:"varint,4,opt,name=middle_type_id,json=middleTypeId,proto3" json:"middle_type_id,omitempty"`
	MiddleVersionId int64            `protobuf:"varint,5,opt,name=middle_version_id,json=middleVersionId,proto3" json:"middle_version_id,omitempty"`
	MiddlePort      []*MiddlePort    `protobuf:"bytes,6,rep,name=middle_port,json=middlePort,proto3" json:"middle_port,omitempty"`
	MiddleConfig    *MiddleConfig    `protobuf:"bytes,7,opt,name=middle_config,json=middleConfig,proto3" json:"middle_config,omitempty"`
	MiddleEnv       []*MiddleEnv     `protobuf:"bytes,8,rep,name=middle_env,json=middleEnv,proto3" json:"middle_env,omitempty"`
	MiddleCpu       float32          `protobuf:"fixed32,9,opt,name=middle_cpu,json=middleCpu,proto3" json:"middle_cpu,omitempty"`
	MiddleMemory    float32          `protobuf:"fixed32,10,opt,name=middle_memory,json=middleMemory,proto3" json:"middle_memory,omitempty"`
	MiddleStorage   []*MiddleStorage `protobuf:"bytes,11,rep,name=middle_storage,json=middleStorage,proto3" json:"middle_storage,omitempty"`
	MiddleReplicas  int32            `protobuf:"varint,12,opt,name=middle_replicas,json=middleReplicas,proto3" json:"middle_replicas,omitempty"`
	//添加需要的镜像版本
	MiddleDockerImageVersion string `protobuf:"bytes,13,opt,name=middle_docker_image_version,json=middleDockerImageVersion,proto3" json:"middle_docker_image_version,omitempty"`
}

func (x *MiddlewareInfo) Reset() {
	*x = MiddlewareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddlewareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareInfo) ProtoMessage() {}

func (x *MiddlewareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlewareInfo.ProtoReflect.Descriptor instead.
func (*MiddlewareInfo) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{0}
}

func (x *MiddlewareInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *MiddlewareInfo) GetMiddleNamespace() string {
	if x != nil {
		return x.MiddleNamespace
	}
	return ""
}

func (x *MiddlewareInfo) GetMiddleTypeId() int64 {
	if x != nil {
		return x.MiddleTypeId
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddleVersionId() int64 {
	if x != nil {
		return x.MiddleVersionId
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddlePort() []*MiddlePort {
	if x != nil {
		return x.MiddlePort
	}
	return nil
}

func (x *MiddlewareInfo) GetMiddleConfig() *MiddleConfig {
	if x != nil {
		return x.MiddleConfig
	}
	return nil
}

func (x *MiddlewareInfo) GetMiddleEnv() []*MiddleEnv {
	if x != nil {
		return x.MiddleEnv
	}
	return nil
}

func (x *MiddlewareInfo) GetMiddleCpu() float32 {
	if x != nil {
		return x.MiddleCpu
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddleMemory() float32 {
	if x != nil {
		return x.MiddleMemory
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddleStorage() []*MiddleStorage {
	if x != nil {
		return x.MiddleStorage
	}
	return nil
}

func (x *MiddlewareInfo) GetMiddleReplicas() int32 {
	if x != nil {
		return x.MiddleReplicas
	}
	return 0
}

func (x *MiddlewareInfo) GetMiddleDockerImageVersion() string {
	if x != nil {
		return x.MiddleDockerImageVersion
	}
	return ""
}

//中间件的端口
type MiddlePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleId       int64  `protobuf:"varint,1,opt,name=middle_id,json=middleId,proto3" json:"middle_id,omitempty"`
	MiddlePort     int32  `protobuf:"varint,2,opt,name=middle_port,json=middlePort,proto3" json:"middle_port,omitempty"`
	MiddleProtocol string `protobuf:"bytes,3,opt,name=middle_protocol,json=middleProtocol,proto3" json:"middle_protocol,omitempty"`
}

func (x *MiddlePort) Reset() {
	*x = MiddlePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddlePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlePort) ProtoMessage() {}

func (x *MiddlePort) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlePort.ProtoReflect.Descriptor instead.
func (*MiddlePort) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{1}
}

func (x *MiddlePort) GetMiddleId() int64 {
	if x != nil {
		return x.MiddleId
	}
	return 0
}

func (x *MiddlePort) GetMiddlePort() int32 {
	if x != nil {
		return x.MiddlePort
	}
	return 0
}

func (x *MiddlePort) GetMiddleProtocol() string {
	if x != nil {
		return x.MiddleProtocol
	}
	return ""
}

//中间的配置
type MiddleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleId             int64  `protobuf:"varint,1,opt,name=middle_id,json=middleId,proto3" json:"middle_id,omitempty"`
	MiddleConfigRootUser string `protobuf:"bytes,2,opt,name=middle_config_root_user,json=middleConfigRootUser,proto3" json:"middle_config_root_user,omitempty"`
	MiddleConfigRootPwd  string `protobuf:"bytes,3,opt,name=middle_config_root_pwd,json=middleConfigRootPwd,proto3" json:"middle_config_root_pwd,omitempty"`
	MiddleConfigUser     string `protobuf:"bytes,4,opt,name=middle_config_user,json=middleConfigUser,proto3" json:"middle_config_user,omitempty"`
	MiddleConfigPwd      string `protobuf:"bytes,5,opt,name=middle_config_pwd,json=middleConfigPwd,proto3" json:"middle_config_pwd,omitempty"`
	MiddleConfigDataBase string `protobuf:"bytes,6,opt,name=middle_config_data_base,json=middleConfigDataBase,proto3" json:"middle_config_data_base,omitempty"`
}

func (x *MiddleConfig) Reset() {
	*x = MiddleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleConfig) ProtoMessage() {}

func (x *MiddleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleConfig.ProtoReflect.Descriptor instead.
func (*MiddleConfig) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{2}
}

func (x *MiddleConfig) GetMiddleId() int64 {
	if x != nil {
		return x.MiddleId
	}
	return 0
}

func (x *MiddleConfig) GetMiddleConfigRootUser() string {
	if x != nil {
		return x.MiddleConfigRootUser
	}
	return ""
}

func (x *MiddleConfig) GetMiddleConfigRootPwd() string {
	if x != nil {
		return x.MiddleConfigRootPwd
	}
	return ""
}

func (x *MiddleConfig) GetMiddleConfigUser() string {
	if x != nil {
		return x.MiddleConfigUser
	}
	return ""
}

func (x *MiddleConfig) GetMiddleConfigPwd() string {
	if x != nil {
		return x.MiddleConfigPwd
	}
	return ""
}

func (x *MiddleConfig) GetMiddleConfigDataBase() string {
	if x != nil {
		return x.MiddleConfigDataBase
	}
	return ""
}

//中间件环境变量
type MiddleEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleId int64  `protobuf:"varint,1,opt,name=middle_id,json=middleId,proto3" json:"middle_id,omitempty"`
	EnvKey   string `protobuf:"bytes,2,opt,name=env_key,json=envKey,proto3" json:"env_key,omitempty"`
	EnvValue string `protobuf:"bytes,3,opt,name=env_value,json=envValue,proto3" json:"env_value,omitempty"`
}

func (x *MiddleEnv) Reset() {
	*x = MiddleEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleEnv) ProtoMessage() {}

func (x *MiddleEnv) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleEnv.ProtoReflect.Descriptor instead.
func (*MiddleEnv) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{3}
}

func (x *MiddleEnv) GetMiddleId() int64 {
	if x != nil {
		return x.MiddleId
	}
	return 0
}

func (x *MiddleEnv) GetEnvKey() string {
	if x != nil {
		return x.EnvKey
	}
	return ""
}

func (x *MiddleEnv) GetEnvValue() string {
	if x != nil {
		return x.EnvValue
	}
	return ""
}

//中间件存储
type MiddleStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleId                int64   `protobuf:"varint,1,opt,name=middle_id,json=middleId,proto3" json:"middle_id,omitempty"`
	MiddleStorageName       string  `protobuf:"bytes,2,opt,name=middle_storage_name,json=middleStorageName,proto3" json:"middle_storage_name,omitempty"`
	MiddleStorageSize       float32 `protobuf:"fixed32,3,opt,name=middle_storage_size,json=middleStorageSize,proto3" json:"middle_storage_size,omitempty"`
	MiddleStoragePath       string  `protobuf:"bytes,4,opt,name=middle_storage_path,json=middleStoragePath,proto3" json:"middle_storage_path,omitempty"`
	MiddleStorageClass      string  `protobuf:"bytes,5,opt,name=middle_storage_class,json=middleStorageClass,proto3" json:"middle_storage_class,omitempty"`
	MiddleStorageAccessMode string  `protobuf:"bytes,6,opt,name=middle_storage_access_mode,json=middleStorageAccessMode,proto3" json:"middle_storage_access_mode,omitempty"`
}

func (x *MiddleStorage) Reset() {
	*x = MiddleStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleStorage) ProtoMessage() {}

func (x *MiddleStorage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleStorage.ProtoReflect.Descriptor instead.
func (*MiddleStorage) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{4}
}

func (x *MiddleStorage) GetMiddleId() int64 {
	if x != nil {
		return x.MiddleId
	}
	return 0
}

func (x *MiddleStorage) GetMiddleStorageName() string {
	if x != nil {
		return x.MiddleStorageName
	}
	return ""
}

func (x *MiddleStorage) GetMiddleStorageSize() float32 {
	if x != nil {
		return x.MiddleStorageSize
	}
	return 0
}

func (x *MiddleStorage) GetMiddleStoragePath() string {
	if x != nil {
		return x.MiddleStoragePath
	}
	return ""
}

func (x *MiddleStorage) GetMiddleStorageClass() string {
	if x != nil {
		return x.MiddleStorageClass
	}
	return ""
}

func (x *MiddleStorage) GetMiddleStorageAccessMode() string {
	if x != nil {
		return x.MiddleStorageAccessMode
	}
	return ""
}

type FindAllByTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId int64 `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
}

func (x *FindAllByTypeId) Reset() {
	*x = FindAllByTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllByTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllByTypeId) ProtoMessage() {}

func (x *FindAllByTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllByTypeId.ProtoReflect.Descriptor instead.
func (*FindAllByTypeId) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{5}
}

func (x *FindAllByTypeId) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type MiddleTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MiddleTypeId) Reset() {
	*x = MiddleTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleTypeId) ProtoMessage() {}

func (x *MiddleTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleTypeId.ProtoReflect.Descriptor instead.
func (*MiddleTypeId) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{6}
}

func (x *MiddleTypeId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MiddlewareId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MiddlewareId) Reset() {
	*x = MiddlewareId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddlewareId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareId) ProtoMessage() {}

func (x *MiddlewareId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlewareId.ProtoReflect.Descriptor instead.
func (*MiddlewareId) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{7}
}

func (x *MiddlewareId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindAll) Reset() {
	*x = FindAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAll) ProtoMessage() {}

func (x *FindAll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAll.ProtoReflect.Descriptor instead.
func (*FindAll) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{8}
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AllMiddleware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddlewareInfo []*MiddlewareInfo `protobuf:"bytes,1,rep,name=middleware_info,json=middlewareInfo,proto3" json:"middleware_info,omitempty"`
}

func (x *AllMiddleware) Reset() {
	*x = AllMiddleware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllMiddleware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllMiddleware) ProtoMessage() {}

func (x *AllMiddleware) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllMiddleware.ProtoReflect.Descriptor instead.
func (*AllMiddleware) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{10}
}

func (x *AllMiddleware) GetMiddlewareInfo() []*MiddlewareInfo {
	if x != nil {
		return x.MiddlewareInfo
	}
	return nil
}

type MiddleTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MiddleTypeName     string           `protobuf:"bytes,2,opt,name=middle_type_name,json=middleTypeName,proto3" json:"middle_type_name,omitempty"`
	MiddleTypeImageSrc string           `protobuf:"bytes,3,opt,name=middle_type_image_src,json=middleTypeImageSrc,proto3" json:"middle_type_image_src,omitempty"`
	MiddleVersion      []*MiddleVersion `protobuf:"bytes,4,rep,name=middle_version,json=middleVersion,proto3" json:"middle_version,omitempty"`
}

func (x *MiddleTypeInfo) Reset() {
	*x = MiddleTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleTypeInfo) ProtoMessage() {}

func (x *MiddleTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleTypeInfo.ProtoReflect.Descriptor instead.
func (*MiddleTypeInfo) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{11}
}

func (x *MiddleTypeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MiddleTypeInfo) GetMiddleTypeName() string {
	if x != nil {
		return x.MiddleTypeName
	}
	return ""
}

func (x *MiddleTypeInfo) GetMiddleTypeImageSrc() string {
	if x != nil {
		return x.MiddleTypeImageSrc
	}
	return ""
}

func (x *MiddleTypeInfo) GetMiddleVersion() []*MiddleVersion {
	if x != nil {
		return x.MiddleVersion
	}
	return nil
}

type MiddleVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleTypeId      int64  `protobuf:"varint,1,opt,name=middle_type_id,json=middleTypeId,proto3" json:"middle_type_id,omitempty"`
	MiddleDockerImage string `protobuf:"bytes,2,opt,name=middle_docker_image,json=middleDockerImage,proto3" json:"middle_docker_image,omitempty"`
	MiddleVs          string `protobuf:"bytes,3,opt,name=middle_vs,json=middleVs,proto3" json:"middle_vs,omitempty"`
}

func (x *MiddleVersion) Reset() {
	*x = MiddleVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleVersion) ProtoMessage() {}

func (x *MiddleVersion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleVersion.ProtoReflect.Descriptor instead.
func (*MiddleVersion) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{12}
}

func (x *MiddleVersion) GetMiddleTypeId() int64 {
	if x != nil {
		return x.MiddleTypeId
	}
	return 0
}

func (x *MiddleVersion) GetMiddleDockerImage() string {
	if x != nil {
		return x.MiddleDockerImage
	}
	return ""
}

func (x *MiddleVersion) GetMiddleVs() string {
	if x != nil {
		return x.MiddleVs
	}
	return ""
}

type AllMiddleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiddleTypeInfo []*MiddleTypeInfo `protobuf:"bytes,1,rep,name=middle_type_info,json=middleTypeInfo,proto3" json:"middle_type_info,omitempty"`
}

func (x *AllMiddleType) Reset() {
	*x = AllMiddleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_middleware_middleware_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllMiddleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllMiddleType) ProtoMessage() {}

func (x *AllMiddleType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_middleware_middleware_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllMiddleType.ProtoReflect.Descriptor instead.
func (*AllMiddleType) Descriptor() ([]byte, []int) {
	return file_proto_middleware_middleware_proto_rawDescGZIP(), []int{13}
}

func (x *AllMiddleType) GetMiddleTypeInfo() []*MiddleTypeInfo {
	if x != nil {
		return x.MiddleTypeInfo
	}
	return nil
}

var File_proto_middleware_middleware_proto protoreflect.FileDescriptor

var file_proto_middleware_middleware_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x22,
	0xda, 0x04, 0x0a, 0x0e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x45, 0x6e, 0x76, 0x52, 0x09, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x70, 0x75, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x3d, 0x0a,
	0x1b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x0a,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x6f,
	0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x77, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x77, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x77, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x09,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x4b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xab, 0x02, 0x0a,
	0x0d, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x3b, 0x0a,
	0x1a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x22, 0x1c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x54, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x72, 0x63, 0x12, 0x40, 0x0a, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x76, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x56, 0x73, 0x22, 0x55, 0x0a, 0x0d,
	0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a,
	0x10, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x32, 0xb7, 0x06, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x14, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x1a, 0x19, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x19, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x1a, 0x19, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x41, 0x6c,
	0x6c, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x42, 0x1f, 0x5a,
	0x1d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x3b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_middleware_middleware_proto_rawDescOnce sync.Once
	file_proto_middleware_middleware_proto_rawDescData = file_proto_middleware_middleware_proto_rawDesc
)

func file_proto_middleware_middleware_proto_rawDescGZIP() []byte {
	file_proto_middleware_middleware_proto_rawDescOnce.Do(func() {
		file_proto_middleware_middleware_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_middleware_middleware_proto_rawDescData)
	})
	return file_proto_middleware_middleware_proto_rawDescData
}

var file_proto_middleware_middleware_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_middleware_middleware_proto_goTypes = []interface{}{
	(*MiddlewareInfo)(nil),  // 0: middleware.MiddlewareInfo
	(*MiddlePort)(nil),      // 1: middleware.MiddlePort
	(*MiddleConfig)(nil),    // 2: middleware.MiddleConfig
	(*MiddleEnv)(nil),       // 3: middleware.MiddleEnv
	(*MiddleStorage)(nil),   // 4: middleware.MiddleStorage
	(*FindAllByTypeId)(nil), // 5: middleware.FindAllByTypeId
	(*MiddleTypeId)(nil),    // 6: middleware.MiddleTypeId
	(*MiddlewareId)(nil),    // 7: middleware.MiddlewareId
	(*FindAll)(nil),         // 8: middleware.FindAll
	(*Response)(nil),        // 9: middleware.Response
	(*AllMiddleware)(nil),   // 10: middleware.AllMiddleware
	(*MiddleTypeInfo)(nil),  // 11: middleware.MiddleTypeInfo
	(*MiddleVersion)(nil),   // 12: middleware.MiddleVersion
	(*AllMiddleType)(nil),   // 13: middleware.AllMiddleType
}
var file_proto_middleware_middleware_proto_depIdxs = []int32{
	1,  // 0: middleware.MiddlewareInfo.middle_port:type_name -> middleware.MiddlePort
	2,  // 1: middleware.MiddlewareInfo.middle_config:type_name -> middleware.MiddleConfig
	3,  // 2: middleware.MiddlewareInfo.middle_env:type_name -> middleware.MiddleEnv
	4,  // 3: middleware.MiddlewareInfo.middle_storage:type_name -> middleware.MiddleStorage
	0,  // 4: middleware.AllMiddleware.middleware_info:type_name -> middleware.MiddlewareInfo
	12, // 5: middleware.MiddleTypeInfo.middle_version:type_name -> middleware.MiddleVersion
	11, // 6: middleware.AllMiddleType.middle_type_info:type_name -> middleware.MiddleTypeInfo
	0,  // 7: middleware.Middleware.AddMiddleware:input_type -> middleware.MiddlewareInfo
	7,  // 8: middleware.Middleware.DeleteMiddleware:input_type -> middleware.MiddlewareId
	0,  // 9: middleware.Middleware.UpdateMiddleware:input_type -> middleware.MiddlewareInfo
	7,  // 10: middleware.Middleware.FindMiddlewareByID:input_type -> middleware.MiddlewareId
	8,  // 11: middleware.Middleware.FindAllMiddleware:input_type -> middleware.FindAll
	5,  // 12: middleware.Middleware.FindAllMiddlewareByTypeID:input_type -> middleware.FindAllByTypeId
	6,  // 13: middleware.Middleware.FindMiddleTypeByID:input_type -> middleware.MiddleTypeId
	11, // 14: middleware.Middleware.AddMiddleType:input_type -> middleware.MiddleTypeInfo
	6,  // 15: middleware.Middleware.DeleteMiddleTypeByID:input_type -> middleware.MiddleTypeId
	11, // 16: middleware.Middleware.UpdateMiddleType:input_type -> middleware.MiddleTypeInfo
	8,  // 17: middleware.Middleware.FindAllMiddleType:input_type -> middleware.FindAll
	9,  // 18: middleware.Middleware.AddMiddleware:output_type -> middleware.Response
	9,  // 19: middleware.Middleware.DeleteMiddleware:output_type -> middleware.Response
	9,  // 20: middleware.Middleware.UpdateMiddleware:output_type -> middleware.Response
	0,  // 21: middleware.Middleware.FindMiddlewareByID:output_type -> middleware.MiddlewareInfo
	10, // 22: middleware.Middleware.FindAllMiddleware:output_type -> middleware.AllMiddleware
	10, // 23: middleware.Middleware.FindAllMiddlewareByTypeID:output_type -> middleware.AllMiddleware
	11, // 24: middleware.Middleware.FindMiddleTypeByID:output_type -> middleware.MiddleTypeInfo
	9,  // 25: middleware.Middleware.AddMiddleType:output_type -> middleware.Response
	9,  // 26: middleware.Middleware.DeleteMiddleTypeByID:output_type -> middleware.Response
	9,  // 27: middleware.Middleware.UpdateMiddleType:output_type -> middleware.Response
	13, // 28: middleware.Middleware.FindAllMiddleType:output_type -> middleware.AllMiddleType
	18, // [18:29] is the sub-list for method output_type
	7,  // [7:18] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_middleware_middleware_proto_init() }
func file_proto_middleware_middleware_proto_init() {
	if File_proto_middleware_middleware_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_middleware_middleware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddlewareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddlePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllByTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddlewareId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllMiddleware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_middleware_middleware_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllMiddleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_middleware_middleware_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_middleware_middleware_proto_goTypes,
		DependencyIndexes: file_proto_middleware_middleware_proto_depIdxs,
		MessageInfos:      file_proto_middleware_middleware_proto_msgTypes,
	}.Build()
	File_proto_middleware_middleware_proto = out.File
	file_proto_middleware_middleware_proto_rawDesc = nil
	file_proto_middleware_middleware_proto_goTypes = nil
	file_proto_middleware_middleware_proto_depIdxs = nil
}
